"use strict";(self.webpackChunkvolca_docs=self.webpackChunkvolca_docs||[]).push([[144],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),k=l,h=c["".concat(s,".").concat(k)]||c[k]||d[k]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=k;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:l,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},4684:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=n(7462),l=(n(7294),n(3905));const r={slug:"/run-locally"},o="2. Run locally",i={unversionedId:"project-setup/run-locally",id:"project-setup/run-locally",title:"2. Run locally",description:"Learn how to run a Volca project locally.",source:"@site/docs/project-setup/02-run-locally.md",sourceDirName:"project-setup",slug:"/run-locally",permalink:"/docs/run-locally",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{slug:"/run-locally"},sidebar:"tutorialSidebar",previous:{title:"1. Create GitHub repository",permalink:"/docs/create-github-repository"},next:{title:"3. Configure AWS",permalink:"/docs/configure-aws"}},s={},u=[{value:"Install tooling",id:"install-tooling",level:2},{value:"1. Install asdf",id:"1-install-asdf",level:3},{value:"2. Install <code>Node.js</code>",id:"2-install-nodejs",level:3},{value:"3. Install <code>yarn</code>",id:"3-install-yarn",level:3},{value:"4. Install Docker",id:"4-install-docker",level:3},{value:"5. Install AWS CLI",id:"5-install-aws-cli",level:3},{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Create a .env file",id:"create-a-env-file",level:2},{value:"Migrate database",id:"migrate-database",level:2},{value:"Run!",id:"run",level:2}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"2-run-locally"},"2. Run locally"),(0,l.kt)("p",null,"Learn how to run a Volca project locally."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"When you start volca locally for the first time, the service will be set up to run with a mocked user and no authentication pages will be displayed. Since the authentication in Volca relies on AWS resources to function you will need to deploy infrastructure to AWS before you can use the full functionality.")),(0,l.kt)("h2",{id:"install-tooling"},"Install tooling"),(0,l.kt)("p",null,"This section guides your through how to install the tooling required to run Volca."),(0,l.kt)("h3",{id:"1-install-asdf"},"1. Install ",(0,l.kt)("a",{parentName:"h3",href:"https://asdf-vm.com/guide/getting-started.html"},"asdf")),(0,l.kt)("p",null,"This package is used to manage versions of tools and ensures that you are running versions compatible with Volca. It will also allow you to run a specific version of tools in Volca while not interfering with your other projects."),(0,l.kt)("p",null,"Once installed, make sure it works from your CLI by running:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"asdf --version")),(0,l.kt)("p",null,"Which should output the version of your asdf installation."),(0,l.kt)("h3",{id:"2-install-nodejs"},"2. Install ",(0,l.kt)("inlineCode",{parentName:"h3"},"Node.js")),(0,l.kt)("p",null,"Node.js is the runtime that allows your backend and frontend to run."),(0,l.kt)("p",null,"Run the following commands to install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  asdf plugin add nodejs\n  asdf install nodejs 16.17.0\n")),(0,l.kt)("p",null,"Once installed, make sure it works from your CLI by running:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"node --version")),(0,l.kt)("p",null,"Which should output ",(0,l.kt)("inlineCode",{parentName:"p"},"v16.17.0")),(0,l.kt)("h3",{id:"3-install-yarn"},"3. Install ",(0,l.kt)("inlineCode",{parentName:"h3"},"yarn")),(0,l.kt)("p",null,"Yarn is the package manager used in Volca and supports our ",(0,l.kt)("a",{parentName:"p",href:"/project-structure"},"monorepo project structure"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  asdf plugin add yarn\n  asdf install yarn 1.22.18\n")),(0,l.kt)("p",null,"Once installed, make sure it works from your CLI by running:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"yarn --version")),(0,l.kt)("p",null,"Which should output ",(0,l.kt)("inlineCode",{parentName:"p"},"v1.22.18")),(0,l.kt)("h3",{id:"4-install-docker"},"4. ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.docker.com/get-docker/"},"Install Docker")),(0,l.kt)("p",null,"Docker is used to run the Postgres database server locally."),(0,l.kt)("p",null,"Once installed, make sure it works from your CLI by running:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"docker --version")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Docker must always be running when you run your project locally")),(0,l.kt)("p",null,"Which should output the version of your Docker installation."),(0,l.kt)("h3",{id:"5-install-aws-cli"},"5. ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html"},"Install AWS CLI")),(0,l.kt)("p",null,"AWS CLI is used to deploy your application to AWS."),(0,l.kt)("p",null,"Once installed, make sure it works from your CLI by running:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"aws --version")),(0,l.kt)("p",null,"Which should output the version of your AWS CLI installation."),(0,l.kt)("h2",{id:"install-dependencies"},"Install dependencies"),(0,l.kt)("p",null,"After the tools has been installed, we can proceed to install the repositories dependencies."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn install\n")),(0,l.kt)("h2",{id:"create-a-env-file"},"Create a .env file"),(0,l.kt)("p",null,"Create a file with the name ",(0,l.kt)("inlineCode",{parentName:"p"},".env")," and place it in the root folder. The file should contain the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"STRIPE_KEY=<stripe-key>\n")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Signing up for a subscription will not work locally until you have created your Stripe test key and added it to this ",(0,l.kt)("inlineCode",{parentName:"p"},".env")," file. Starting the project will work however. Once you have added your Stripe test key, you can activate a subscription locally by opening the checkout page and pressing the back button as Stripe cannot communicate with your local environment. Read more about how to set up Stripe in the ",(0,l.kt)("a",{parentName:"p",href:"/docs/configure-stripe"},"Configure Stripe")," section.")),(0,l.kt)("h2",{id:"migrate-database"},"Migrate database"),(0,l.kt)("p",null,"To create the database tables, step into the ",(0,l.kt)("inlineCode",{parentName:"p"},"services/api")," folder and run ",(0,l.kt)("inlineCode",{parentName:"p"},"yarn migrate:latest:local"),"."),(0,l.kt)("h2",{id:"run"},"Run!"),(0,l.kt)("p",null,"From the root folder, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn start\n")),(0,l.kt)("p",null,"This command will make the Volca web app available on ",(0,l.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:3000")," and the backend API available on ",(0,l.kt)("inlineCode",{parentName:"p"},"http://localhost:4000"),"."),(0,l.kt)("p",null,"Congrats, now you can start building features using your favorite IDE!"))}c.isMDXComponent=!0}}]);